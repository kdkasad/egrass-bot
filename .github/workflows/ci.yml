name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Check out sources
        uses: actions/checkout@v5

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Cache downloaded dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: bun-install-cache-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            bun-install-cache-${{ runner.os }}-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint code
        run: bun run lint

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Check out sources
        uses: actions/checkout@v4

      # Required for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Required for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=edge

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy:
    name: Upgrade deployment
    environment: Production
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Trigger restart
        run: |
          eval $(ssh-agent)
          ssh-add - <<< "$SSH_PRIVATE_KEY"
          cat > /tmp/known_hosts <<< "$SSH_HOST_KEY"
          ssh -o UserKnownHostsFile=/tmp/known_hosts -o StrictHostKeyChecking=yes -o UpdateHostKeys=no -p $PORT $HOST
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST_KEY: ${{ secrets.SSH_HOST_KEY }}
          PORT: ${{ secrets.SSH_PORT }}
          HOST: ${{ secrets.SSH_HOST }}
